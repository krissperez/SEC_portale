{% extends 'base.html.twig' %}

{% block body %}
    <h1>Modifica Cliente</h1>
    <h6>Apporta le modifiche al cliente selezionato</h6>

    <div class="container">
        <form id="formDati" method="put" data-id="{{ cliente.id }}">
            <div class="form-group row">
                <div class="col-md-4 mt-3">
                    <label for="ragione-sociale">Ragione Sociale</label>
                    <input type="text" class="form-control" id="ragione-sociale" name="ragione_sociale" placeholder="Ragione Sociale" value="{{ cliente.ragioneSociale }}">
                </div>
                <div class="col-md-4 mt-3">
                    <label for="partita-iva">Partita IVA</label>
                    <input type="text" class="form-control" id="partita-iva" name="partita_iva" placeholder="Partita IVA" value="{{ cliente.partitaIva }}">
                </div>
                <div class="col-md-4 mt-3">
                    <label for="settore-attivita">Settore Attività</label>
                    <input type="text" class="form-control" id="settore-attivita" name="settore_attivita" placeholder="Settore Attività " value="{{ cliente.settoreAttivita }}">
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-3 mt-3">
                    <label for="indirizzo">Indirizzo</label>
                    <input type="text" class="form-control" id="indirizzo" name="indirizzo" placeholder="Indirizzo" value="{{ cliente.indirizzo }}">
                </div>
                <div class="col-md-3 mt-3">
                    <label for="cap">Cap</label>
                    <input type="text" class="form-control" id="cap" name="cap" placeholder="CAP" value="{{ cliente.cap }}">
                </div>
                <div class="col-md-3 mt-3">
                    <label for="comune">Comune</label>
                    <input type="text" class="form-control" id="comune" name="comune" placeholder="Comune" readonly>
                </div>
                <div class="col-md-3 mt-3">
                    <label for="provincia">Provincia</label>
                    <input type="text" class="form-control" id="provincia" name="provincia" placeholder="Provincia" readonly>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-4 mt-3">
                    <label for="email">E-mail</label>
                    <input type="email" class="form-control" id="email" name="email" placeholder="Email" value="{{ cliente.email }}">
                </div>
                <div class="col-md-4 mt-3">
                    <label for="pec">PEC</label>
                    <input type="email" class="form-control" id="pec" name="pec" placeholder="PEC" value="{{ cliente.pec }}">
                </div>
                <div class="col-md-4 mt-3">
                    <label for="telefono">Telefono</label>
                    <input type="tel" class="form-control" id="telefono" name="telefono" placeholder="Telefono" value="{{ cliente.telefono }}">
                </div>
            </div>


            <div class="form-group row">
                <div class="col-md-6 mt-3">
                    <label for="agente-assegnato">Agente Assegnato</label>
                    <select class="form-control" id="agente-assegnato" name="id_agente">
                        <option>Seleziona un agente</option>
                    </select>
                </div>
                <div class="col-md-6 mt-3">
                    <label for="data-acquisizione">Data Acquisizione</label>
                    <input type="date" class="form-control" id="data-acquisizione" name="data_acquisizione" value="{{ cliente.dataAcquisizione|date('Y-m-d') }}">
                </div>
            </div>

            <div class="col-md-12 mt-4 mb-5">
                <input type="button" id="save" class="btn btn-primary btn-block w-100"
                       value="Salva Modifiche">
            </div>
        </form>
    </div>

    <script>
        $(function () {
            $.validator.addMethod("phoneIT", function(value, element) {
                return this.optional(element) || /^(\+39)?\d{1,10}$/.test(value);
            }, "Per favore, inserisci un numero di telefono valido.");

            $("#formDati").validate({
                rules: {
                    ragione_sociale: {
                        required: true,
                        minlength: 2
                    },
                    partita_iva: {
                        required: true,
                        minlength: 11,
                        maxlength: 11
                    },
                    settore_attivita: {
                        required: true,
                        minlength: 2
                    },
                    indirizzo: {
                        required: true,
                        minlength: 5
                    },
                    cap: {
                        required: true,
                        minlength: 5,
                        maxlength: 5,
                        digits: true
                    },
                    comune: {
                        required: true,
                    },
                    provincia: {
                        required: true,
                        minlength: 2
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    pec: {
                        required: true,
                        email: true
                    },
                    telefono: {
                        required: true,
                        phoneIT: true
                    },
                    id_agente: {
                        required: true
                    },
                    data_acquisizione: {
                        required: true,
                        date: true
                    }
                },
                messages: {
                    ragione_sociale: {
                        required: "Inserisci la ragione sociale.",
                        minlength: "La ragione sociale deve essere lunga almeno 2 caratteri."
                    },
                    partita_iva: {
                        required: "Inserisci la partita IVA.",
                        minlength: "La partita IVA deve essere lunga 11 caratteri.",
                        maxlength: "La partita IVA deve essere lunga 11 caratteri."
                    },
                    settore_attivita: {
                        required: "Inserisci il settore di attività.",
                        minlength: "Il settore di attività deve essere lungo almeno 2 caratteri."
                    },
                    indirizzo: {
                        required: "Inserisci l'indirizzo.",
                        minlength: "L'indirizzo deve essere lungo almeno 5 caratteri."
                    },
                    comune: {
                        required: "Inserisci il comune."
                    },
                    provincia: {
                        required: "Inserisci la provincia.",
                        minlength: "La provincia deve essere lunga almeno 2 caratteri."
                    },
                    cap: {
                        required: "Inserisci il CAP.",
                        minlength: "Il CAP deve essere lungo 5 caratteri.",
                        maxlength: "Il CAP deve essere lungo 5 caratteri.",
                        digits: "Il CAP deve contenere solo cifre."
                    },
                    email: {
                        required: "Inserisci l'email.",
                        email: "Inserisci un'email valida."
                    },
                    pec: {
                        required: "Inserisci la PEC.",
                        email: "Inserisci una PEC valida."
                    },
                    telefono: {
                        required: "Inserisci il numero di telefono.",
                        phoneIT: "Per favore, inserisci un numero di telefono valido."
                    },
                    id_agente: {
                        required: "Seleziona un agente."
                    },
                    data_acquisizione: {
                        required: "Inserisci la data di acquisizione.",
                        date: "Inserisci una data valida."
                    }
                },
                highlight: function(element) {
                    $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
                    $(element).closest('.form-control').removeClass('border-success').addClass('border-danger');
                },
                unhighlight: function(element) {
                    $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
                    $(element).closest('.form-control').removeClass('border-danger').addClass('border-success');
                }
            });


            user.init();
        })

        let user = {
            init: function (){
                user.setOnClickButton();

                let inputCap = $('#cap').val();
                user.getComuneProvinciaByCap(inputCap);
                user.getAgentsByCap(inputCap);
            },

            setOnClickButton: function (){
                $('#cap').on('change', function (){
                    let inputCap = $('#cap').val();
                    console.log('CAP:', inputCap);
                    user.getAgentsByCap(inputCap);
                    user.getComuneProvinciaByCap(inputCap);
                })

                $('#save').on('click', function (){
                    user.updateCustomer();
                })
            },

            getAgentsByCap: function (inputCap){
                $.ajax({
                    url: 'http://localhost:8080/api/agentsCap/agentsByCap/' + inputCap,
                    type: 'GET',
                    dataType: 'json',

                    success: function (data) {
                        if(data.ok) {
                            console.log(data.ok, data.message, data.data);
                            let agentSelect = $('#agente-assegnato');
                            agentSelect.empty();
                            agentSelect.append('<option>Seleziona un agente</option>');

                            $.each(data.data, function (index, agente) {
                                let option = $('<option></option>').attr('value', agente.id).text(agente.nome + ' ' + agente.cognome);
                                agentSelect.append(option);
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error:', xhr.responseText);
                        console.error('Status:', status);
                        console.error('Error:', error);
                    }
                })

            },

            getComuneProvinciaByCap: function (inputCap){
                $.ajax({
                    url: 'http://localhost:8080/api/cap/comuneProviciaByCap/' + inputCap,
                    type: 'GET',
                    dataType: 'json',

                    success: function (response) {
                        const data = response.data[0];
                        if(response.ok) {
                            // console.log(response.ok, response.message, response.data);
                            $('#comune').val(data['comune']);
                            $('#provincia').val(data['provincia']);
                        }
                    },
                    error: function (xhr, status, error) {
                        let errorJson = JSON.parse(xhr.responseText);
                        console.error('AJAX Error:', xhr.responseText);
                        console.error('Status:', status);
                        console.error('Error:', error);
                        if (errorJson.error === "CAP non trovato"){
                            alert(errorJson.error);
                            $('#cap').closest('.form-group').addClass('has-error');
                            $('#cap').addClass('border-danger');
                        }
                    }
                })
            },

            updateCustomer: function (){
                let id = $('form').data('id');
                let formData = new FormData($("#formDati")[0]);
                let formDataObj = {};

                formData.forEach((value, key) => {
                    formDataObj[key] = value;
                });

                $.ajax({
                    url: 'http://localhost:8080/api/clients/' + id,
                    cache: false,
                    contentType: 'application/json',
                    processData: false,
                    data: JSON.stringify(formDataObj),
                    type: 'PUT',
                    success: function (data) {
                        console.log(data)
                        if (data.ok === true) {
                            window.location.pathname = '/clienti';
                        }
                    },
                    error: function (xhr, status, error) {
                        let errorJson = JSON.parse(xhr.responseText);
                        console.error('AJAX Error:', xhr.responseText);
                        console.error('Status:', status);
                        console.error('Error:', error);
                        if (errorJson.userMessage === "Scegliere un agente da assegnare"){
                            alert(errorJson.userMessage);
                            $('#agente-assegnato').closest('.form-group').addClass('has-error');
                            $('#agente-assegnato').addClass('border-danger');
                        } else {
                            alert(errorJson.userMessage);
                        }


                    }
                })
            }
        }
    </script>
{% endblock %}

